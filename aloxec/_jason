#!/bin/bash

function check_help {
  # taken from shocco
  if expr -- "$*" : ".*--help" >/dev/null; then
    display_help
    exit 0
  fi
}

function require {
  source "$@"
}

function parse_command_line {
  if [[ "$FLAGS_SUB" = "$FLAGS_TRUE" && "$@" > 0 ]]; then
    export POSIXLY_CORRECT=1
  fi

  if ! FLAGS "$@"; then
    unset POSIXLY_CORRECT
    if [[ "$flags_error" = "help requested" ]]; then
      echo ""
      display_help
      exit 0
    fi
    
    return 4
  fi

  unset POSIXLY_CORRECT
  return 0
}

function configure_logging {
  # load log4sh (disabling properties file warning) and clear the default
  # configuration
  LOG4SH_CONFIGURATION='none' require 'log4sh'
  log4sh_resetConfiguration

  # set the global logging level to INFO
  logger_setLevel INFO

  # add and configure a FileAppender that outputs to STDERR, and activate the
  # configuration
  logger_addAppender stderr
  appender_setType stderr FileAppender
  appender_file_setFile stderr STDERR
  appender_activateOptions stderr
}

function ryaml {
  ruby -ryaml -e 'def ps x; unless x.nil?; puts (x.class == String || x.class == Fixnum) ? x : x.to_yaml; end; end; ps ARGV[1..-1].inject(YAML.load(File.read(ARGV[0]))) {|acc, key| acc[acc.class == Array ? key.to_i : key] }' "$@" 2>&-
}

function random_str {
  echo "$(date +%s).$$.$RANDOM"
}

function runmany {
  local cpu="$1"; shift
  local args="$1"; shift
  local cmd="$1"; shift
  if [[ "$#" = 0 ]]; then
    cat
  else
    echo "$@"
  fi | xargs -P $cpu -n $args -- bash -c "$cmd" ""
}

function mark_log {
  local nm_mark="$1"; shift
  touch "$tmp_switch/wait-$nm_mark"
  echo $tmp_switch $nm_mark
  while [[ -f "$tmp_switch/wait-$nm_mark" ]]; do
    sleep 1
  done
}

function marked_logger {
  local nm_switch=""
  while read -r a b; do
    if [[ "$a" = "$tmp_switch" ]]; then
      nm_switch="$b"
      rm "$tmp_switch/wait-$nm_switch"
    else
      if [[ -z "$nm_switch" ]]; then
        echo "$a $b"
      else
        echo "$nm_switch: $a $b"
      fi
    fi
  done
}

function mark_stdout {
  if [[ -z "${tmp_switch:-}" ]]; then
    tmp_switch="$(mktemp -d -t XXXXXXXXX)"
  fi
  exec 1> >(marked_logger)
}

function mark_stderr {
  if [[ -z "${tmp_switch:-}" ]]; then
    tmp_switch="$(mktemp -d -t XXXXXXXXX)"
  fi
  exec 2> >(marked_logger)
}

function mark_output {
  if [[ -z "${tmp_switch:-}" ]]; then
    tmp_switch="$(mktemp -d -t XXXXXXXXX)"
  fi
  exec 1> >(marked_logger) 2>&1
}

function _main {
  : ${__jason__:=x}
  if [[ "$__jason__" != 'x' ]]; then
    return 0
  fi

  __jason__='y'

  require 'shflags'

  configure_logging
}

_main "$@"
set -fue
